# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Message {
  mId: String!
  message: String!
  userId: String!
  user: User!
  roomId: String!
  room: Room!
  createdAt: DateTime
  deletedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Room {
  rId: String!
  roomName: String
  users: [User!]!
  messages: [Message!]
}

type User {
  uId: String!
  firstName: String!
  lastName: String!
  emailId: String!
  password: String
  isSocialLogin: Boolean
  uniqueId: String!
  messages: Message
  rooms: [Room!]
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

type SignInResponse {
  token: String!
}

type GetAllUsersResponse {
  totalCount: Int!
  users: [User!]!
}

type GetMessagesByRoomAndUserIdRespType {
  totalCount: Int!
  messages: [Message!]!
}

type GetAllRoomsResponseType {
  totalCount: Int!
  rooms: [Room!]!
}

type Query {
  signIn(emailId: String!, password: String!): SignInResponse!
  getAllUsers(pageNo: Int!, perPage: Int!, searchText: String!): GetAllUsersResponse!
  getUserById(id: String!): User!
  getMessageByRoomIdAndUserId(getMessageByRoomAndUserIdInput: GetMessageByRoomAndUserIdInput!): GetMessagesByRoomAndUserIdRespType!
  message(id: Int!): Message!
  getAllRooms(pageNo: Int!, perPage: Int!): GetAllRoomsResponseType!
  getRoomByRoomId(id: String!): Room!
}

input GetMessageByRoomAndUserIdInput {
  roomId: String!
  userId: String!
  pageNo: Int!
  perPage: Int!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  checkUserExist(emailId: String!): Boolean!
  sendMessage(sendMessageInput: SendMessageInput!): Message!
  updateMessage(updateMessageInput: UpdateMessageInput!): Message!
  removeMessage(id: Int!): Message!
  createRoom(createRoomInput: CreateRoomInput!): Room!
  updateRoom(updateRoomInput: UpdateRoomInput!): Room!
  removeRoom(id: Int!): Room!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  emailId: String!
  password: String
  isSocialLogin: Boolean
}

input UpdateUserInput {
  firstName: String
  lastName: String
  emailId: String
  password: String
  isSocialLogin: Boolean
  uId: String!
}

input SendMessageInput {
  userId: String!
  roomId: String!
  message: String!
}

input UpdateMessageInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateRoomInput {
  roomName: String
  users: [UpdateUserInput!]!
}

input UpdateRoomInput {
  roomName: String
  users: [UpdateUserInput!]
  id: Int!
}